name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    name: Build installers (${{ matrix.os }})
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build web app
        run: npm run build
        env:
          CI: true

      - name: Build Electron installer (Windows)
        if: startsWith(matrix.os, 'windows')
        run: npx electron-builder --win nsis --publish never

      - name: Build Electron installer (Linux)
        if: startsWith(matrix.os, 'ubuntu')
        run: npx electron-builder --linux AppImage deb --publish never

      - name: Build Electron installer (macOS)
        if: startsWith(matrix.os, 'macos')
        env:
          CSC_IDENTITY_AUTO_DISCOVERY: 'false'
        run: npx electron-builder --mac dmg --publish never

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-${{ runner.os }}
          path: |
            dist/**/*

  create-release:
    name: Create GitHub Release and upload installers
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist-all
          merge-multiple: true

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist-all/**/*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 